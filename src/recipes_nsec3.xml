<section id="recipes-nsec3">
 <title>NSEC and NSEC3 Recipes</title>

 <!-- === NSEC to NSEC3 === -->
 <section id="recipes-nsec-to-nsec3">
  <title>Migrating from NSEC to NSEC3</title>
  <para>This recipe describes how to go from using NSEC to NSEC3, as described
  in <xref linkend="advanced-discussions-proof-of-nonexistence" />. This recipe assumes
  that the zones are already signed, and <command>named</command> is
  configured according to the steps described in <xref
  linkend="easy-start-guide-for-authoritative-servers" />.</para>
  
  <warning>If your zone is signed with RSASHA1 (algorithm 5) you cannot
  migrate to NSEC3 without also performing an <emphasis>algorithm rollover
  </emphasis> to RSASHA1-NSEC3-SHA1 (algorithm 7) as described in
  <xref linkend="advanced-discussions-DNSKEY-algorithm-rollovers"/>.  This
  ensures that older validating resolvers that don't understand NSEC3 will
  fallback to treating the zone as unsecured (rather than "bogus") as described in <ulink
  url="https://tools.ietf.org/html/rfc5155#section-2">Section 2 of RFC 5155</ulink>.
  </warning>

  <para>This command below enables NSEC3 for the zone <code>example.com</code>,
  using a pseudo-random string 1234567890abcdef for its salt:</para>

  <screen># <userinput>rndc signing -nsec3param 1 0 10 1234567890abcdef example.com</userinput></screen>

  <para>You'll know it worked if you see the following log messages:</para>

  <screen>Oct 21 13:47:21 received control channel command 'signing -nsec3param 1 0 10 1234567890abcdef example.com'
Oct 21 13:47:21 zone example.com/IN (signed): zone_addnsec3chain(1,CREATE,10,1234567890ABCDEF)</screen>

  <para>You can also verify that this worked by querying for a name you know
  that does not exist, and check for the presence of the NSEC3 record, such as
  this:</para>

  <screen>$ <userinput>dig @192.168.1.13 thereisnowaythisexists.example.com. A +dnssec +multiline</userinput>

...
TOM10UQBL336NFAQB3P6MOO53LSVG8UI.example.com. 300 IN <userinput>NSEC3</userinput> 1 0 10 1234567890ABCDEF (
				TQ9QBEGA6CROHEOC8KIH1A2C06IVQ5ER
				NS SOA RRSIG DNSKEY NSEC3PARAM )
...</screen>

  <para>Our example used four parameters: 1, 0, 10, and 1234567890ABCDEF, in
  the order they appeared. 1 represents the algorithm, 0 represents the opt-out
  flag, 10 represents the number of iterations, and 1234567890abcedf is the
  salt. To learn more about each of these parameters, please see <xref
  linkend="advanced-discussions-nsec3param" />.</para>

  <para>For example, to create an NSEC3 chain using the SHA-1 hash algorithm,
  no opt-out flag, 10 iterations, and a salt value of "FFFF", use: </para>

  <screen># <userinput>rndc signing -nsec3param 1 0 10 FFFF example.com</userinput></screen>

  <para>To set the opt-out flag, 15 iterations, and no salt, use:</para>

  <screen># <userinput>rndc signing -nsec3param 1 1 15 - example.com</userinput></screen>

 </section>


 <!-- === NSEC3 to NSEC === -->
 <section id="recipes-nsec3-to-nsec">
  <title>Migrating from NSEC3 to NSEC</title>
  
  <para>This recipe describes how to migrate from NSEC3 to NSEC.</para>
  
  <para>Migrating from NSEC3 back to NSEC is easy, just use the
  <command>rndc</command> command like this:</para>

  <screen>$ <userinput>rndc signing -nsec3param none example.com</userinput></screen>

  <para>You know that it worked if you see these messages in log:</para>

  <screen>named[14093]: received control channel command 'signing -nsec3param none example.com'
named[14093]: zone example.com/IN: zone_addnsec3chain(1,REMOVE,10,1234567890ABCDEF)</screen>

  <para>Of course, you can query for a name that you know that does not exist,
  and you should no longer see any traces of NSEC3 records.</para>

  <screen>$ <userinput>dig @192.168.1.13 reieiergiuhewhiouwe.example.com. A +dnssec +multiline</userinput>

...
example.com.		300 IN NSEC aaa.example.com. NS SOA RRSIG NSEC DNSKEY
...
ns1.example.com.	300 IN NSEC web.example.com. A RRSIG NSEC
...</screen>
  
 </section>


 <!-- === Changing NSEC3 Salt === -->
 <section id="recipes-nsec3-salt">
  <title>Changing NSEC3 Salt Recipe</title>

  <para>In <xref linkend="advanced-discussions-nsec3-salt" />, we've discussed
  the reasons why you may want to change your salt once in a while for better
  privacy. In this recipe, we will look at what command to execute to actually
  change the salt, and how to verify that it has been changed.</para>

  <para>To change your NSEC3 salt to "fedcba0987654321", you may run the <command>rndc signing</command> command like
  this:</para>

  <screen># <userinput>rndc signing -nsec3param 1 1 10 fedcba0987654321 example.com</userinput></screen>
  
  <para>You should see the following messages in log, assuming your old salt
  was "1234567890abcdef":</para>

  <screen>named[15848]: zone example.com/IN: zone_addnsec3chain(1,REMOVE,10,1234567890ABCDEF)
named[15848]: zone example.com/IN: zone_addnsec3chain(1,CREATE|OPTOUT,10,FEDCBA0987654321)</screen>

  <para>You can of course, try to query the name server (192.168.1.13 in our
  example) for a name that does not exist, and check the NSEC3 record
  returned:</para>

  <screen>$ <userinput>dig @192.168.1.13 thereisnowaythisexists.example.com. A +dnssec +multiline</userinput>

...
TOM10UQBL336NFAQB3P6MOO53LSVG8UI.example.com. 300 IN <userinput>NSEC3 1 0 10 FEDCBA0987654321</userinput> (
				TQ9QBEGA6CROHEOC8KIH1A2C06IVQ5ER
				NS SOA RRSIG DNSKEY NSEC3PARAM )
...</screen>

  <note>
   <title>Pseudo-Random Salt</title>
   <para>You can use a pseudo-random source to create the salt for you. Here is
   an example on Linux to create a 16-character hex string:</para>

   <screen># rndc signing -nsec3param 1 0 10 $(head -c 300 /dev/random | sha1sum | cut -b 1-16) example.com</screen>
  </note>

  <para>
    BIND 9.10 and newer provides the keyword <quote>auto</quote>
    which may be used in place of the salt field for
    <command>named</command> to generate a random salt.
  </para>

 </section>


 <!-- === NSEC3 Optout === -->
 <section id="recipes-nsec3-optout">
  <title>NSEC3 Optout Recipe</title>

  <para>This recipe discusses how to enable and disable NSEC3 opt-out, and show
  the results of each action. As discussed in <xref
  linkend="advanced-discussions-nsec3-optout" />, NSEC3 opt-out is a feature
  that can help conserve resources on parent zones that have many delegations
  that have yet been signed.</para>

  <para>Before starting, for this recipe we will assume the zone <code>example.com</code>
  has the following 4 entries (for this example, it is not relevant what record
  types these entries are):</para>

  <itemizedlist>
   <listitem><simpara>ns1.example.com</simpara></listitem>
   <listitem><simpara>ftp.example.com</simpara></listitem>
   <listitem><simpara>www.example.com</simpara></listitem>
   <listitem><simpara>web.example.com</simpara></listitem>
  </itemizedlist>

  <para>And the zone example.com has 5 delegations to 5 sub domains, only one
  of which is signed and has a valid DS RRset:</para>

  <itemizedlist>
   <listitem><simpara>aaa.example.com, not signed</simpara></listitem>
   <listitem><simpara>bbb.example.com, signed</simpara></listitem>
   <listitem><simpara>ccc.example.com, not signed</simpara></listitem>
   <listitem><simpara>ddd.example.com, not signed</simpara></listitem>
   <listitem><simpara>eee.example.com, not signed</simpara></listitem>
  </itemizedlist>

  <para>Before enabling NSEC3 opt-out, the zone <code>example.com</code> contains ten NSEC3
  records, below is the list with plain text name before the actual NSEC3
  record:</para>

  <itemizedlist>
   <listitem>
    <simpara><emphasis>aaa.example.com</emphasis>:
    9NE0VJGTRTMJOS171EC3EDL6I6GT4P1Q.example.com.</simpara>
   </listitem>
   <listitem>
    <simpara><emphasis>bbb.example.com</emphasis>:
    AESO0NT3N44OOSDQS3PSL0HACHUE1O0U.example.com.</simpara>
   </listitem>
   <listitem>
    <simpara><emphasis>ccc.example.com</emphasis>:
    SF3J3VR29LDDO3ONT1PM6HAPHV372F37.example.com.</simpara>
   </listitem>
   <listitem>
    <simpara><emphasis>ddd.example.com</emphasis>:
    TQ9QBEGA6CROHEOC8KIH1A2C06IVQ5ER.example.com.</simpara>
   </listitem>
   <listitem>
    <simpara><emphasis>eee.example.com</emphasis>:
    L16L08NEH48IFQIEIPS1HNRMQ523MJ8G.example.com.</simpara>
   </listitem>
   <listitem>
    <simpara><emphasis>ftp.example.com</emphasis>:
    JKMAVHL8V7EMCL8JHIEN8KBOAB0MGUK2.example.com.</simpara>
   </listitem>
   <listitem>
    <simpara><emphasis>ns1.example.com</emphasis>:
    FSK5TK9964BNE7BPHN0QMMD68IUDKT8I.example.com.</simpara>
   </listitem>
   <listitem>
    <simpara><emphasis>web.example.com</emphasis>:
    D65CIIG0GTRKQ26Q774DVMRCNHQO6F81.example.com.</simpara>
   </listitem>
   <listitem>
    <simpara><emphasis>www.example.com</emphasis>:
    NTQ0CQEJHM0S17POMCUSLG5IOQQEDTBJ.example.com.</simpara>
   </listitem>
   <listitem>
    <simpara><emphasis>example.com</emphasis>:
    TOM10UQBL336NFAQB3P6MOO53LSVG8UI.example.com.</simpara>
   </listitem>
  </itemizedlist>

  <para>We can enable NSEC3 opt-out with this command, changing the opt-out bit
  (the second parameter of the 4) from 0 to 1 (see <xref
  linkend="advanced-discussions-nsec3param" /> to review what each parameter
  is):</para>

  <screen># rndc signing -nsec3param 1 <userinput>1</userinput> 10 1234567890abcdef example.com</screen>

  <para>After NSEC3 opt-out is enabled, the number of NSEC3 records is reduced.
  Notice that the unsigned delegations <code>aaa</code>, <code>ccc</code>,
  <code>ddd</code>, and <code>eee</code> now don't have corresponding NSEC3
  records.</para>

  <itemizedlist>
   <listitem>
    <simpara><emphasis>bbb.example.com</emphasis>:
    AESO0NT3N44OOSDQS3PSL0HACHUE1O0U.example.com.</simpara>
   </listitem>
   <listitem>
    <simpara><emphasis>ftp.example.com</emphasis>:
    JKMAVHL8V7EMCL8JHIEN8KBOAB0MGUK2.example.com.</simpara>
   </listitem>
   <listitem>
    <simpara><emphasis>ns1.example.com</emphasis>:
    FSK5TK9964BNE7BPHN0QMMD68IUDKT8I.example.com.</simpara>
   </listitem>
   <listitem>
    <simpara><emphasis>web.example.com</emphasis>:
    D65CIIG0GTRKQ26Q774DVMRCNHQO6F81.example.com.</simpara>
   </listitem>
   <listitem>
    <simpara><emphasis>www.example.com</emphasis>:
    NTQ0CQEJHM0S17POMCUSLG5IOQQEDTBJ.example.com.</simpara>
   </listitem>
   <listitem>
    <simpara><emphasis>example.com</emphasis>:
    TOM10UQBL336NFAQB3P6MOO53LSVG8UI.example.com.</simpara>
   </listitem>
  </itemizedlist>

  <para>To undo NSEC3 opt-out, run the same <command>rndc</command> command
  with the opt-out bit set to 0:</para>

  <screen># rndc signing -nsec3param 1 <userinput>0</userinput> 10 1234567890abcdef example.com</screen>

  <note>
   <title>nsec3hash</title>
   <para>NSEC3 hashes the plain text domain name, and we can compute our own
   hashes using the tool <command>nsec3hash</command>. For example, to compute
   the hashed name for "www.example.com" using the parameters we listed above,
   we would execute the command like this:</para>

   <screen># <userinput>nsec3hash 1234567890ABCDEF 1 10 www.example.com.</userinput>
NTQ0CQEJHM0S17POMCUSLG5IOQQEDTBJ (salt=1234567890ABCDEF, hash=1, iterations=10)</screen>
  </note>
 </section>
</section>
