<section id="what-does-dnssec-add-to-dns">
 <title>What does DNSSEC Add to DNS?</title>

 <note>
  <title>Primer on Public Key Cryptography</title>
  <para>Public Key Cryptography works on the concept of a pair of keys,
  one is made available to the world publicly, and one is kept in secrecy
  privately. Not surprisingly, they are known as public key and private
  key. If you are not familiar with the concept, think of it as a cleverly
  designed lock, where one key locks, and one key unlocks. In DNSSEC, we
  give out the unlocking public key to the rest of the world, while
  keeping the locking key private. To learn how this is used to secure DNS
  messages, take a look at <xref linkend="how-are-answers-verified" />.
  </para>
 </note>

 <para>DNSSEC introduces six new resource record types:
  <itemizedlist>
   <listitem>
    <simpara>RRSIG (digital signature)</simpara>
   </listitem>
   <listitem>
    <simpara>DNSKEY (public key)</simpara>
   </listitem>
   <listitem>
    <simpara>DS (parent-child)</simpara>
   </listitem>
   <listitem>
    <simpara>NSEC (proof of nonexistence)</simpara>
   </listitem>
   <listitem>
    <simpara>NSEC3 (proof of nonexistence)</simpara>
   </listitem>
   <listitem>
    <simpara>NSEC3PARAM (proof of nonexistence)</simpara>
   </listitem>
   <listitem>
    <simpara>CDS (child-parent)</simpara>
   </listitem>
   <listitem>
    <simpara>CDNSKEY (child-parent)</simpara>
   </listitem>
  </itemizedlist>
 </para>

 <para>This guide will not dissect into the anatomy of each resource record
 type, the details are left for the readers to research and explore. Below is a
 short introduction on each of the new record types:

  <itemizedlist>
   <listitem>
    <simpara><emphasis>RRSIG</emphasis>: With DNSSEC enabled, just about every
    DNS answer (A, PTR, MX, SOA, DNSKEY, etc.) will come with at least one
    RRSIG, or resource record signature. These signatures are used by recursive
    name servers, also known as validating resolvers, to verify the answers
    received. To learn how digital signatures are generated and used, see <xref
    linkend="how-are-answers-verified" />.</simpara>
   </listitem>

   <listitem>
    <simpara><emphasis>DNSKEY</emphasis>: DNSSEC relies on public key
    cryptography for data authenticity and integrity. There are several keys
    used in DNSSEC, some private, some public. The public keys are published to
    the world as part of the zone data, and they are stored in the DNSKEY
    record type. In general, there are two categories of keys used in DNSSEC,
    Zone Signing Key (ZSK) is used to protect all zone data, and Key Signing
    Key (KSK) is used to protect other keys. We will talk about keys in <xref
    linkend="signing-generate-keys-explained" />, and again later in <xref
    linkend="advanced-discussions-key-generation" />.</simpara>
   </listitem>

   <listitem>
    <simpara><emphasis>DS</emphasis>: One of the critical components of DNSSEC
    is that the parent zone can "vouch" for its child zone. The DS record is
    verifiable information (generated from one of the child's public keys) that a
    parent zone publishes about its child as part of the chain of trust. To learn more
    about the Chain of Trust, see <xref linkend="chain-of-trust" />.</simpara>
   </listitem>

   <listitem>
    <simpara><emphasis>NSEC, NSEC3, NSEC3PARAM</emphasis>: These resource
    records all deal with a very interesting problem: proving that something
    really does not exist.  We will look at these record types in more detail
    in <xref linkend="advanced-discussions-proof-of-nonexistence" />.</simpara>
   </listitem>

   <listitem>
    <simpara><emphasis>CDS, CDNSKEY</emphasis>: The CDS and CDNSKEY resource
    records apply to operational matters and are a way to signal to the parent
    zone that the DS records it holds for the child zone should be updated.
    This is covered in more detail in <xref linkend="cds-cdnskey"/></simpara>
   </listitem>

  </itemizedlist></para>

</section>

