<section id="recipes-rollovers">
 <title>Rollover Recipes</title>

 <!-- === ZSK Rollover === -->
 <section id="recipes-zsk-rollover">
  <title>ZSK Rollover Recipe</title>

  <para>If you are signing your zone using a <code>dnssec-policy</code>
  statement, you don't really need this section. In the policy statement ~ou
  set how long you want your keys to be valid for, other parameters (such as
  the time taken for information to propagate through your zone, how long it
  takes for your parent zone to register a new DS record etc.) and that's 
  more or less it.
  <command>named</command> takes care of everything for you (apart from
  uploading the new DS records to your parent zone - that is covered in
  <xref linkend="signing-easy-start-upload-to-parent-zone"/>).  However, it is
  useful in describing what's happens through the rollover process and what you
  should be monitoring.</para>

  <para>This recipe covers how to perform a ZSK rollover using what is known as
  the Pre-Publication method. For other ZSK rolling methods, please see <xref
  linkend="zsk-rollover-methods" /> in <xref
  linkend="dnssec-advanced-discussions" />. </para>

  <para>Below is the timeline for a ZSK rollover to occur on January 1st,
  2021:</para>

  <orderedlist>
   <listitem>
    <simpara>December 1st, 2020, a month before rollover</simpara>
    <itemizedlist>
     <listitem>
      <simpara>Generate new ZSK</simpara>
     </listitem>
     <listitem>
      <simpara>Add DNSKEY for new ZSK to zone</simpara>
     </listitem>
    </itemizedlist>
   </listitem>

   <listitem>
    <simpara>January 1st, 2021, day of rollover</simpara>
    <itemizedlist>
     <listitem>
      <simpara>New ZSK used to replace RRSIGs for the bulk of the zone</simpara>
     </listitem>
    </itemizedlist>
   </listitem>

   <listitem>
    <simpara>February 1st, 2021</simpara>
    <itemizedlist>
     <listitem>
      <simpara>Remove old ZSK DNSKEY RRset from zone</simpara>
     </listitem>
     <listitem>
      <simpara>DNSKEY signatures made with KSK are changed</simpara>
     </listitem>
    </itemizedlist>
   </listitem>
  </orderedlist>

  <para>The current active ZSK has the ID 17694 in this example. For more
  information on key management (such as what inactive date is, and why 30 days
  for example), please see <xref linkend="advanced-discussions-key-management"
  />. </para>

  <!-- === One Month Before ZSK Rollover === -->
  <section id="one-month-before-zsk-rollover">
   <title>One Month Before ZSK Rollover</title>

   <para>On December 1st, 2020, a month before the planned rollover, you should 
   change the parameters on the current key (17694) to become inactive on
   January 1st, 2021, and be deleted from the zone on February 1st, 2021, as
   well as generate a successor key (51623):</para>

   <screen># <userinput>cd /etc/bind/keys/example.com/</userinput>
# <userinput>dnssec-settime -I 20210101 -D 20210201 Kexample.com.+008+17694</userinput>
./Kexample.com.+008+17694.key/GoDaddy

./Kexample.com.+008+17694.private
# <userinput>dnssec-keygen -S Kexample.com.+008+17694</userinput>
Generating key pair..++++++ ...........++++++ 
Kexample.com.+008+<userinput>51623</userinput></screen>

   <para>The first command gets us into the key directory
   <filename>/etc/bind/keys/example.com/</filename>, where keys
   for <code>example.com</code> are stored.</para>

   <para>The second <command>dnssec-settime</command> sets an inactive (-I) date
   of January 1st, 2021, and a deletion (-D) date of February 1st, 2021 for the
   current ZSK (Kexample.com.+008+17694).</para>

   <para>Then the third command <command>dnssec-keygen</command> creates a
   successor key, using the exact same parameters (algorithms, key sizes, etc.)
   as the current ZSK. The new ZSK created in our example is
   Kexample.com.+008+51623. </para>

   <para>Don't forget to make sure the successor keys are readable by
   <command>named</command>.</para>

   <para>You can see in <command>named</command>'s logging messages informing
   you when the next key checking event is scheduled to occur, the frequency of
   which can be controlled by <code>dnssec-loadkeys-interval</code>. The log
   message looks like this:</para>

   <screen>zone example.com/IN (signed): next key event: 01-Dec-2020 00:13:05.385</screen>

   <para>And you can check the publish date of the key by looking at the key
   file:</para>

   <screen># <userinput>cd /etc/bind/keys/example.com</userinput>
# cat Kexample.com.+008+51623.key 
; This is a zone-signing key, keyid 11623, for example.com.
; Created: 20201130160024 (Mon Dec  1 00:00:24 2020)
; <userinput>Publish: 20201202000000 (Fri Dec  2 08:00:00 2020)</userinput>
; Activate: 20210101000000 (Sun Jan  1 08:00:00 2021)
...</screen>

   <para>Since the publish date is set to the morning of December 2nd, the next
   morning you will notice that your zone has gained a new DNSKEY record, but
   the new ZSK is not yet being used to generate signatures.  Below is the
   abbreviated output with shortened DNSKEY and RRSIG when querying the
   authoritative name server, 192.168.1.13:</para>

   <screen>$ <userinput>dig @192.168.1.13 example.com. DNSKEY +dnssec +multiline</userinput>

...
;; ANSWER SECTION:
example.com.		600 IN DNSKEY 257 3 8 (
				AwEAAcWDps...lM3NRn/G/R
				) ; KSK; alg = RSASHA256; key id = 6817
example.com.		600 IN DNSKEY 256 3 8 (
				AwEAAbi6Vo...qBW5+iAqNz
				) ; ZSK; alg = RSASHA256; key id = <userinput>51623</userinput>
example.com.		600 IN DNSKEY 256 3 8 (
				AwEAAcjGaU...0rzuu55If5
				) ; ZSK; alg = RSASHA256; key id = 17694
example.com.		600 IN RRSIG DNSKEY 8 2 600 (
				20210101000000 20201201230000 6817 example.com.
				LAiaJM26T7...FU9syh/TQ= )
example.com.		600 IN RRSIG DNSKEY 8 2 600 (
				20210101000000 20201201230000 17694 example.com.
				HK4EBbbOpj...n5V6nvAkI= )
...</screen>

   <para>And for good measures, let's take a look at the SOA record and its
   signature for this zone. Notice the RRSIG is signed by the current ZSK
   17694. This will come in handy later when you want to verify whether or not
   the new ZSK is in effect:</para>

   <screen>$ <userinput>dig @192.168.1.13 example.com. SOA +dnssec +multiline</userinput>

...
;; ANSWER SECTION:
example.com.		600 IN SOA ns1.example.com. admin.example.com. (
				2020120102 ; serial
				1800       ; refresh (30 minutes)
				900        ; retry (15 minutes)
				2419200    ; expire (4 weeks)
				300        ; minimum (5 minutes)
				)
example.com.		600 IN RRSIG SOA 8 2 600 (
				20201230160109 20201130150109 <userinput>17694</userinput> example.com.
				YUTC8rFULaWbW+nAHzbfGwNqzARHevpryzRIJMvZBYPo
				NAeejNk9saNAoCYKWxGJ0YBc2k+r5fYq1Mg4ll2JkBF5
				buAsAYLw8vEOIxVpXwlArY+oSp9T1w2wfTZ0vhVIxaYX
				6dkcz4I3wbDx2xmG0yngtA6A8lAchERx2EGy0RM= )</screen>

   <para>These are all the manual tasks you need to perform for a ZSK rollover.
   If you have followed the configuration examples in this guide of using
   <varname>inline-signing</varname> and <varname>auto-dnssec</varname>,
   everything else is automated for you.</para>
  </section>

  <!-- === Day of ZSK Rollover === -->
  <section id="day-of-zsk-rollover">
   <title>Day of ZSK Rollover</title>

   <para>On the actual day of the rollover, although there is technically
   nothing for you to do, you should still keep an eye on the zone to make sure
   new signatures are being generated by the new ZSK (51623 in this
   example). The easiest way is to query the authoritative name
   server 192.168.1.13 for the SOA record like you did a month
   ago:</para>
   
   <screen>$ <userinput>dig @192.168.1.13 example.com. SOA +dnssec +multiline</userinput>

...
;; ANSWER SECTION:
example.com.		600 IN SOA ns1.example.com. admin.example.com. (
				2020112011 ; serial
				1800       ; refresh (30 minutes)
				900        ; retry (15 minutes)
				2419200    ; expire (4 weeks)
				300        ; minimum (5 minutes)
				)
example.com.		600 IN RRSIG SOA 8 2 600 (
				20210131000000 20201231230000 <userinput>51623</userinput> example.com.
				J4RMNpJPOmMidElyBugJp0RLqXoNqfvo/2AT6yAAvx9X
				zZRL1cuhkRcyCSLZ9Z+zZ2y4u2lvQGrNiondaKdQCor7
				uTqH5WCPoqalOCBjqU7c7vlAM27O9RD11nzPNpVQ7xPs
				y5nkGqf83OXTK26IfnjU1jqiUKSzg6QR7+XpLk0= )
...</screen>

   <para>As you can see, the signature generated by the old ZSK (17694)
   disappeared, replaced by a new signature generated from the new ZSK
   (51623).</para>

   <note>
    <title>Life Time of the Signatures</title>
    <para>Not all signatures will disappear magically on the same day,
    depending on when each one is generated. Worst case scenario is that a new
    signature could have been signed by the old ZSK (17695) moments before it
    was deactivated, thus the signature could live for almost 30 more days, all
    the way up to right before February 1st. </para>

<!-- TODO: 22.5 days by default, due to 7.5 cycle interval, and jitter too? -->
<!-- TODO: by the way, where is this documented in the ARM for auto-dnssec? -->

    <para>This is why it is important that you should keep the old ZSK in the
    zone for a little bit longer and not delete it right away. </para> 

   </note>
  </section>

  <!-- === One Month After ZSK Rollover === -->
  <section id="one-month-after-zsk-rollover">
   <title>One Month After ZSK Rollover</title>
   <para>Again, technically there should be nothing you need to do on this day,
   but it doesn't hurt to verify that the old ZSK (17694) is now completely
   gone from your zone. <command>named</command> will not touch
   <filename>Kexample.com.+008+17694.private</filename> and
   <filename>Kexample.com.+008+17694.key</filename> on your file system.
   Running the same <command>dig</command> command for DNSKEY should
   suffice:</para>

   <screen>$ <userinput>dig @192.168.1.13 example.com. DNSKEY +multiline +dnssec</userinput>

...
;; ANSWER SECTION:
example.com.		600 IN DNSKEY 257 3 8 (
				AwEAAcWDps...lM3NRn/G/R
				) ; KSK; alg = RSASHA256; key id = 6817
example.com.		600 IN DNSKEY 256 3 8 (
				AwEAAdeCGr...1DnEfX+Xzn
				) ; ZSK; alg = RSASHA256; key id = 51623
example.com.		600 IN RRSIG DNSKEY 8 2 600 (
				20170203000000 20170102230000 6817 example.com.
				KHY8P0zE21...Y3szrmjAM= )
example.com.		600 IN RRSIG DNSKEY 8 2 600 (
				20170203000000 20170102230000 51623 example.com.
				G2g3crN17h...Oe4gw6gH8= )
...</screen>

   <para>Congratulations, the ZSK rollover is complete! As for the actual key
   files (the <filename>.key</filename> and <filename>.private</filename>
   files), they may be deleted at this point, but it's not required.</para>

  </section>
 </section>


 <!-- === KSK Rollover === -->
 <section id="recipes-ksk-rollover">
  <title>KSK Rollover Recipe</title>

  <para>This recipe describes how to perform KSK rollover using the Double-DS
  method. For other KSK rolling methods, please see <xref
  linkend="ksk-rollover-methods" /> in <xref
  linkend="dnssec-advanced-discussions" />. The registrar used in this recipe
  is <ulink url="https://www.godaddy.com" > <citetitle>GoDaddy</citetitle>
  </ulink>. Also for this recipe, we are keeping the number of DS records down
  to just one per active set using just SHA-1, for the sake of better clarity,
  although in practice most zone operators choose to upload 2 DS records as we
  have shown in <xref linkend="working-with-parent-zone" />. For more
  information on key management (such as what inactive date is, and why 30 days
  for example), please see <xref linkend="advanced-discussions-key-management"
  />.</para>

  <para>Below is the timeline for a KSK rollover to occur on January 1st,
  2021:</para>

  <orderedlist>
   <listitem>
    <simpara>December 1st, 2020, a month before rollover</simpara>
    <itemizedlist>
     <listitem>
      <simpara>Change timer on the current KSK</simpara>
     </listitem>
     <listitem>
      <simpara>Generate new KSK and DS records</simpara>
     </listitem>
     <listitem>
      <simpara>Add DNSKEY for the new KSK to zone</simpara>
     </listitem>
     <listitem>
      <simpara>Upload new DS records to parent zone</simpara>
     </listitem>
    </itemizedlist>
   </listitem>

   <listitem>
    <simpara>January 1st, 2021, day of rollover</simpara>
    <itemizedlist>
     <listitem>
      <simpara>Use the new KSK to sign all DNSKEY RRset, this generates new
      RRSIGs</simpara>
     </listitem>
     <listitem>
      <simpara>Add new RRSIGs to the zone</simpara>
     </listitem>
     <listitem>
      <simpara>Remove RRSIG for the old ZSK from zone</simpara>
     </listitem>
     <listitem>
      <simpara>Start using the new KSK to sign DNSKEY</simpara>
     </listitem>
    </itemizedlist>
   </listitem>

   <listitem>
    <simpara>February 1st, 2021</simpara>
    <itemizedlist>
     <listitem>
      <simpara>Remove the old KSK DNSKEY from zone</simpara>
     </listitem>
     <listitem>
      <simpara>Remove old DS records from parent zone</simpara>
     </listitem>
    </itemizedlist>
   </listitem>
  </orderedlist>

  <para>The current active KSK has the ID 24828, and this is the DS record
  that has already been published by the parent zone:</para>

  <screen># <userinput>dnssec-dsfromkey -a SHA-1 Kexample.com.+007+24828.key</userinput>
example.com. IN DS 24828 7 1 D4A33E8DD550A9567B4C4971A34AD6C4B80A6AD3</screen>

  <!-- === One Month Before KSK Rollover === -->
  <section id="one-month-before-ksk-rolloever">
   <title>One Month Before KSK Rollover</title>

   <para>On December 1st, 2020, a month before the planned rollover, you should
   change the parameters on the current key to become inactive on January 1st,
   2021, and be deleted from the zone on February 1st, 2021, as well as
   generate a successor key (23550). Finally, you should generate a new DS
   record based on the new key 23550:</para>

   <screen># <userinput>cd /etc/bind/keys/example.com/</userinput>
# <userinput>dnssec-settime -I 20210101 -D 20210201 Kexample.com.+007+24828</userinput>
./Kexample.com.+007+24848.key
./Kexample.com.+007+24848.private
# <userinput>dnssec-keygen -S Kexample.com.+007+24848</userinput>
Generating key pair.......................................................................................++ ...................................++ 
Kexample.com.+007+23550
# <userinput>dnssec-dsfromkey -a SHA-1 Kexample.com.+007+23550.key</userinput>
example.com. IN DS 23550 7 1 54FCF030AA1C79C0088FDEC1BD1C37DAA2E70DFB</screen>


   <para>The first command gets us into the key directory
   <filename>/etc/bind/keys/example.com/</filename>, where keys for
   <code>example.com</code> are stored.</para>

   <para>The second <command>dnssec-settime</command> sets an inactive (-I)
   date of January 1st, 2021, and a deletion (-D) date of February 1st, 2021
   for the current KSK (Kexample.com.+007+24848).</para>

   <para>Then the third command <command>dnssec-keygen</command> creates a
   successor key, using the exact same parameters (algorithms, key sizes, etc.)
   as the current KSK. The new key pair created in our example is
   Kexample.com.+007+23550.</para>

   <para>The fourth and final command <command>dnssec-dsfromkey</command>
   creates a DS record from the new KSK (23550), using SHA-1 as the digest
   type. Again, in practice most people generate two DS records for both
   supported digest types (SHA-1 and SHA-256), but for our example here we are
   only using one to keep the output small and hopefully clearer.</para>

   <para>Don't forget to make sure the successor keys are readable by
   <command>named</command>. </para>

   <para>You can see in syslog the messages informing you when the next key
   checking event is, and it looks like this:</para>

   <screen>zone example.com/IN (signed): next key event: 01-Dec-2020 00:13:05.385</screen>

   <para>And you can check the publish date of the key by looking at the key
   file:</para>

   <screen># <userinput>cd /etc/bind/keys/example.com</userinput>
# <userinput>cat Kexample.com.+007+23550.key</userinput>
; This is a key-signing key, keyid 23550, for example.com.
; Created: 20201130160024 (Thu Dec  1 00:00:24 2020)
; Publish: 20201202000000 (Fri Dec  2 08:00:00 2020)
; Activate: 20210101000000 (Sun Jan  1 08:00:00 2021)
...</screen>

  <para>Since the publish date is set to the morning of December 2nd, the next morning you will notice that your zone has gained a new DNSKEY record based on your new KSK, but no corresponding RRSIG yet. Below is the abbreviated output with shortened DNSKEY and RRSIG when querying the authoritative name server, 192.168.1.13:</para>

  <screen>$ <userinput>dig @192.168.1.13 example.com. DNSKEY +dnssec +multiline</userinput>

...
;; ANSWER SECTION:
example.com.   300 IN DNSKEY 256 3 7 (
                AwEAAdYqAc...TiSlrma6Ef
                ) ; ZSK; alg = NSEC3RSASHA1; key id = 29747
example.com.   300 IN DNSKEY 257 3 7 (
                AwEAAeTJ+w...O+Zy9j0m63
                ) ; KSK; alg = NSEC3RSASHA1; key id = 24828
example.com.   300 IN DNSKEY 257 3 7 (
                AwEAAc1BQN...Wdc0qoH21H
                ) ; KSK; alg = NSEC3RSASHA1; key id = <userinput>23550</userinput>
example.com.   300 IN RRSIG DNSKEY 7 2 300 (
                20201206125617 20201107115617 24828 example.com.
                4y1iPVJOrK...aC3iF9vgc= )
example.com.   300 IN RRSIG DNSKEY 7 2 300 (
                20201206125617 20201107115617 29747 example.com.
                g/gfmPjr+y...rt/S/xjPo= )

...</screen>

   <para>Any time after you have generated the DS record, you could upload it,
   you don't have to wait for the DNSKEY to be published in your zone, since
   this new KSK is not active yet. You could choose to do it immediately after
   the new DS record has been generated on December 1st, or you could wait
   until the next day after you have verified that the new DNSKEY record is
   added to the zone. Below are the screenshots from using GoDaddy's web-based
   interface to add a new DS record<footnote><para>The screenshots were taken from
   GoDaddy's unterface at the time the original version of this guide was published
   (2015).  It may have changed since then.</para></footnote>.</para>
 
   <orderedlist>
    <!-- #1 -->
    <listitem> 
     <simpara>After logging in, click the green "Launch" button next to the
     domain name you want to manage.</simpara>
     <figure>
      <title>Upload DS Record Step #1</title>
      <mediaobject>
       <imageobject>
        <imagedata fileref="../img/add-ds-1.png" width="70%" scalefit="1"/>
       </imageobject>
      </mediaobject>
     </figure>
    </listitem>

    <!-- #2 -->
    <listitem>
     <simpara>Scroll down to the "DS Records" section and click
     Manage.</simpara>
     <figure>
      <title>Upload DS Record Step #2</title>
      <mediaobject>
       <imageobject>
        <imagedata fileref="../img/add-ds-2.png" width="40%" scalefit="1" />
       </imageobject>
      </mediaobject>
     </figure>
    </listitem>

    <!-- #3 -->
    <listitem>
     <simpara>A dialog appears, displaying the current key (24828). Click "Add
     DS Record".</simpara>
     <figure>
      <title>Upload DS Record Step #3</title>
      <mediaobject>
       <imageobject>
        <imagedata fileref="../img/add-ds-3.png" width="80%" scalefit="1" />
       </imageobject>
      </mediaobject>
     </figure>
    </listitem>

    <!-- #4 -->
    <listitem>
     <simpara>Enter the Key ID, algorithm, digest type, and the digest, then
     click "Next".</simpara>
     <figure>
      <title>Upload DS Record Step #4</title>
      <mediaobject>
       <imageobject>
        <imagedata fileref="../img/add-ds-4.png" width="80%" scalefit="1" />
       </imageobject>
      </mediaobject>
     </figure>
    </listitem>

    <!-- #5 -->
    <listitem>
     <simpara>Address any errors and click "Finish".</simpara>
     <figure>
      <title>Upload DS Record Step #5</title>
      <mediaobject>
       <imageobject>
        <imagedata fileref="../img/add-ds-5.png" width="80%" scalefit="1" />
       </imageobject>
      </mediaobject>
     </figure>
    </listitem>

    <!-- #6 -->
    <listitem>
     <simpara>Both DS records are shown. Click "Save".</simpara>
     <figure>
      <title>Upload DS Record Step #6</title>
      <mediaobject>
       <imageobject>
        <imagedata fileref="../img/add-ds-6.png" width="80%" scalefit="1" />
       </imageobject>
      </mediaobject>
     </figure>
    </listitem>
   </orderedlist>

   <para>Finally, let's verify that the registrar has published the new DS
   record. This may take anywhere from a few minutes to a few days, depending
   on your parent zone. You could verify whether or not your parent zone has
   published the new DS record by querying for the DS record of your zone. In
   the example below, the Google public DNS server 8.8.8.8 is used:</para>

   <screen>$ <userinput>dig @8.8.8.8 example.com. DS</userinput>

...
;; ANSWER SECTION:
example.com.	21552	IN	DS	24828 7 1 D4A33E8DD550A9567B4C4971A34AD6C4B80A6AD3
example.com.	21552	IN	DS	<userinput>23550</userinput> 7 1 54FCF030AA1C79C0088FDEC1BD1C37DAA2E70DFB</screen>

   <para>You could also query your parent zone's authoritative name servers
   directly to see if these records have been published. DS records will not
   show up on your own authoritative zone, so do not query your own name
   servers for them. In this recipe, the parent zone is <code>.com</code>, so
   querying a few of the <code>.com</code> name servers is another appropriate
   verification.</para>

  </section>

  <!-- === Day of KSK Rollover === -->
  <section id="day-of-ksk-rollover">
   <title>Day of KSK Rollover</title>

   <para>If you have followed the examples in this document as described in <xref linkend="easy-start-guide-for-authoritative-servers" />, there is technically nothing you need to do manually on the actual day of the rollover. However, you should still keep an eye on the zone to make sure new signature(s) are being generated by the new KSK (23550 in this example). The easiest way is to query the authoritative name server 192.168.1.13 for the same DNSKEY and signatures like you did a month ago:</para>

   <screen>$ <userinput>dig @192.168.1.13 example.com. DNSKEY +dnssec +multiline</userinput>

...
;; ANSWER SECTION:
example.com.   300 IN DNSKEY 256 3 7 (
                AwEAAdYqAc...TiSlrma6Ef
                ) ; ZSK; alg = NSEC3RSASHA1; key id = 29747
example.com.   300 IN DNSKEY 257 3 7 (
                AwEAAeTJ+w...O+Zy9j0m63
                ) ; KSK; alg = NSEC3RSASHA1; key id = 24828
example.com.   300 IN DNSKEY 257 3 7 (
                AwEAAc1BQN...Wdc0qoH21H
                ) ; KSK; alg = NSEC3RSASHA1; key id = 23550
example.com.	300 IN RRSIG DNSKEY 7 2 300 (
				20210201074900 20210101064900 <userinput>23550</userinput> mydnssecgood.org.
				S6zTbBTfvU...Ib5eXkbtE= )
example.com.	300 IN RRSIG DNSKEY 7 2 300 (
				20210105074900 20201206064900 29747 mydnssecgood.org.
				VY5URQA2/d...OVKr1+KX8= )
...</screen>

   <para>As you can see, the signature generated by the old KSK (24828)
   disappeared, replaced by a new signature generated from the new KSK
   (23550).</para>

  </section>

  <!-- === One Month After KSK Rollover === -->
  <section id="one-month-after-ksk-rollover">
   <title>One Month After KSK Rollover</title>

   <para>While the removal of the old DNSKEY from zone should be automated by
   <command>named</command>, the removal of the DS record is manual. You should
   make sure the old DNSKEY record is gone from your zone first by querying for
   the DNSKEY records of the zone, and this time we expect to see one less
   DNSKEY, namely the key with ID of 24828:</para>

   <screen>$ <userinput>dig @192.168.1.13 example.com. DNSKEY +dnssec +multiline</userinput>

...
;; ANSWER SECTION:
example.com.	300 IN DNSKEY 256 3 7 (
				AwEAAdYqAc...TiSlrma6Ef
				) ; ZSK; alg = NSEC3RSASHA1; key id = 29747
example.com.	300 IN DNSKEY 257 3 7 (
				AwEAAc1BQN...Wdc0qoH21H
				) ; KSK; alg = NSEC3RSASHA1; key id = 23550
example.com.	300 IN RRSIG DNSKEY 7 2 300 (
				20210208000000 20210105230000 23550 mydnssecgood.org.
				Qw9Em3dDok...bNCS7KISw= )
example.com.	300 IN RRSIG DNSKEY 7 2 300 (
				20210208000000 20210105230000 29747 mydnssecgood.org.
				OuelpIlpY9...XfsKupQgc= )
...</screen>

   <para>Now, we can remove the old DS record for key 24828 from our parent
   zone. Be careful to remove the correct DS record. If we accidentally removed
   the new DS record(s) of key ID 23550, it could lead to a problem called
   "security lameness", as discussed in <xref
   linkend="troubleshooting-security-lameness" />, and may cause users unable
   to resolve any names in our zone.</para>

   <orderedlist>
    <!-- #1 -->
    <listitem>
     <simpara>After logging in and launched the domain, scroll down to the "DS
     Records" section and click Manage.</simpara>

     <figure>
      <title>Remove DS Record Step #1</title>
      <mediaobject>
       <imageobject>
        <imagedata fileref="../img/remove-ds-1.png" width="40%" scalefit="1"/>
       </imageobject>
      </mediaobject>
     </figure>
    </listitem>

    <!-- #2 -->
    <listitem>
     <simpara>A dialog appears, displaying both keys (24828 and 23550). Use the
     far right hand X button to remove the key 24828.</simpara>

     <figure>
      <title>Remove DS Record Step #2</title>
      <mediaobject>
       <imageobject>
        <imagedata fileref="../img/remove-ds-2.png" width="80%" scalefit="1" />
       </imageobject>
      </mediaobject>
     </figure>
    </listitem>

    <!-- #3 -->
    <listitem>
     <simpara>Key 24828 now appears crossed out, click "Save" to complete the
     removal.</simpara>

     <figure>
      <title>Remove DS Record Step #3</title>
      <mediaobject>
       <imageobject>
        <imagedata fileref="../img/remove-ds-3.png" width="80%" scalefit="1" />
       </imageobject>
      </mediaobject>
     </figure>
    </listitem>
   </orderedlist>

   <para>Congratulations, the KSK rollover is complete! As for the actual key
   files (the <filename>.key</filename> and <filename>.private</filename>
   files), they may be deleted at this point, but it's not required.</para>
  </section>
 </section>
</section>
