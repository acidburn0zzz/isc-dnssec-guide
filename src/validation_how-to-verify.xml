<!-- === How To Test Recursive Server === -->
<section id="how-to-test-recursive-server">
 <title>How To Test Recursive Server (So You Think You Are Validating)</title>
 <para>Okay, so now that you have reconfigured your recursive server and
 restarted it, how do you know that your recursive name server is actually
 verifying each DNS query? There are several ways to check, and we've listed a
 couple of suggestions below.</para>


 <!-- ====== Using Web-based Tools to Verify ===== -->
 <section id="using-web-based-tests-to-verify">
  <title>Using Web-based Tools to Verify</title>
  <para>For most people, the simplest way to check if the recursive name server
  is indeed validating DNS queries, is to use one of the many web-based
  tools.</para>

  <para>Configure your client computer to use the newly reconfigured recursive
  server for DNS resolution, and then you can use any one of these
  web-based tests to see if it is in fact validating answers DNS
  responses.

   <itemizedlist>
    <listitem>
     <ulink url="http://en.internet.nl/connection/" />
    </listitem>
    <listitem>
     <ulink url="http://dnssec.vs.uni-due.de/" />
    </listitem>
   </itemizedlist>
  </para>

<!--
  <para>For example, opening the URL <ulink
  url="http://dnssectest.sidnlabs.nl/" /> in your web browser will show the
  following before (left) and after (right) DNSSEC validation is enabled:</para>

  <figure>
   <title>DNSSEC Web-based Tests</title>
   <mediaobject>
    <imageobject>
     <imagedata fileref="../img/dnssec-test.png" width="80%" scalefit="1"/>
    </imageobject>
   </mediaobject>
  </figure>
-->

 </section>


 <!-- ====== Using dig to Verify ===== -->
 <section id="using-dig-to-verify">
  <title>Using dig to Verify</title>
  <para>The web-based tools often employ JavaScript.  If you don't
  trust the JavaScript magic that the web-based tools rely on, you
  can take matters into your own hands and use a command line DNS
  tool to check your validating resolver yourself.</para>

  <para>While <command>nslookup</command> is popular, partly because it comes pre-installed on
  most systems, it is not DNSSEC-aware. <command>dig</command>,
  on the other hand, fully supports the DNSSEC
  standard and comes as a part of BIND. If you do not have <command>dig</command> already
  installed on your system, install it by downloading it from ISC's web site.
  ISC provides pre-compiled Windows versions on its web site.</para>
  
  <para><command>dig</command> is a flexible tool for interrogating DNS name
  servers. It performs DNS lookups and displays the answers that are returned
  from the name server(s) that were queried. Most seasoned DNS administrators
  use <command>dig</command> to troubleshoot DNS problems because of its
  flexibility, ease of use, and clarity of output.</para>

  <para>The example below shows using <command>dig</command> to query the name
  server 10.53.0.1 for the A record for <code>ftp.isc.org</code> when DNSSEC
  validation is enabled (i.e.  the default.) The address 10.53.0.1 is only used as
  an example, you should replace it with the actual address or host
  name of your recursive name server.</para>

  <screen>$ <userinput>dig @10.53.0.1 ftp.isc.org. A +dnssec +multiline</userinput>

; &lt;&lt;&gt;&gt; DiG 9.16.0 &lt;&lt;&gt;&gt; @10.53.0.1 ftp.isc.org a +dnssec +multiline
; (1 server found)
;; global options: +cmd
;; Got answer:
;; -&gt;&gt;HEADER&lt;&lt;- opcode: QUERY, status: NOERROR, id: 48742
;; flags: qr rd ra <userinput>ad</userinput>; QUERY: 1, ANSWER: 2, AUTHORITY: 0, ADDITIONAL: 1

;; OPT PSEUDOSECTION:
; EDNS: version: 0, flags: do; udp: 4096
; COOKIE: 29a9705c2160b08c010000005e67a4a102b9ae079c1b24c8 (good)
;; QUESTION SECTION:
;ftp.isc.org.		IN A

;; ANSWER SECTION:
ftp.isc.org.		300 IN A 149.20.1.49
ftp.isc.org.		300 IN RRSIG A 13 3 300 (
				20200401191851 20200302184340 27566 isc.org.
				e9Vkb6/6aHMQk/t23Im71ioiDUhB06sncsduoW9+Asl4
				L3TZtpLvZ5+zudTJC2coI4D/D9AXte1cD6FV6iS6PQ== )

;; Query time: 452 msec
;; SERVER: 10.53.0.1#53(10.53.0.1)
;; WHEN: Tue Mar 10 14:30:57 GMT 2020
;; MSG SIZE  rcvd: 187</screen>

  <para>The important detail in this output is the presence of the
  <code>ad</code> flag in the header.  This signifies that BIND has retrieved
  all related DNSSEC information related to the target of the query
  (ftp.isc.org) and that the answer received has passed the validation process
  described in <xref linkend="how-are-answers-verified" />.  We can have
  confidence in the authenticity and integrity of the answer, that
  <code>ftp.isc.org</code> really points to the IP address 149.20.1.49, and it
  was not a spoofed answer from a clever attacker.</para>

  <para>Unlike earlier versions of BIND, the current versions of BIND always
  request DNSSEC records (by setting the <code>do</code> bit in the query they
  make to upstream servers), regardless of DNSSEC settings.  However, with
  validation disabled, the returned signature is not checked. This can be seen
  by explicitly disabling DNSSEC validation. To do this, add the line
  <code>dnssec-validation no;</code> to the "options" section of the
  configuration file, i.e.</para>

   <screen>
options {
    ...
    dnssec-validation no;
    ...
};</screen>

  <para>If the server is re-started (to ensure a clean cache) and the same
  <command>dig</command> command executed, the result is very similar:</para>

  <screen>$ <userinput>dig @10.53.0.1 ftp.isc.org. A +dnssec +multiline</userinput>

; &lt;&lt;&gt;&gt; DiG 9.16.0 &lt;&lt;&gt;&gt; @10.53.0.1 ftp.isc.org a +dnssec +multiline
; (1 server found)
;; global options: +cmd
;; Got answer:
;; -&gt;&gt;HEADER&lt;&lt;- opcode: QUERY, status: NOERROR, id: 39050
;; flags: qr rd ra; QUERY: 1, ANSWER: 2, AUTHORITY: 0, ADDITIONAL: 1

;; OPT PSEUDOSECTION:
; EDNS: version: 0, flags: do; udp: 4096
; COOKIE: a8dc9d1b9ec45e75010000005e67a8a69399741fdbe126f2 (good)
;; QUESTION SECTION:
;ftp.isc.org.		IN A

;; ANSWER SECTION:
ftp.isc.org.		300 IN A 149.20.1.49
ftp.isc.org.		300 IN RRSIG A 13 3 300 (
				20200401191851 20200302184340 27566 isc.org.
				e9Vkb6/6aHMQk/t23Im71ioiDUhB06sncsduoW9+Asl4
				L3TZtpLvZ5+zudTJC2coI4D/D9AXte1cD6FV6iS6PQ== )

;; Query time: 261 msec
;; SERVER: 10.53.0.1#53(10.53.0.1)
;; WHEN: Tue Mar 10 14:48:06 GMT 2020
;; MSG SIZE  rcvd: 187</screen>

  <para>However this time there is no <code>ad</code> flag in the header.
  Although <command>dig</command> is still returning the DNSSEC-related 
  resource records, it is not checking them, so cannot vouch for the
  authenticity of the answer.  If you do carry out this test, remember to
  re-enable DNSSEC validation (by removing the <code>dnssec-validation no;</code>
  line from the configuration file) before continuing.</para>
</section>


 <!-- ====== Verifying Protection from Bad Domain Names ====== -->
 <section id="verifying-protection-from-bad-domain-names">
  <title>Verifying Protection from Bad Domain Names</title>
  <para>It is also important to make sure that DNSSEC is protecting you from
  domain names that fail to validate; such failures could be caused by attacks
  on your system, attempting to get it to accept false DNS information.
  Validation could fail for a number of reasons, maybe the answer doesn't
  verify because it's a spoofed response; maybe the signature was a replayed
  network attack that has expired; or maybe the child zone has been compromised
  along with its keys, and the parent zone's information is telling us that
  things don't add up.  There is a domain name specifically setup to purposely
  fail DNSSEC validation, <code>www.dnssec-failed.org</code>.</para>

  <para>With DNSSEC validation enabled (the default), an attempt to look up the
  name will fail:</para>

  <screen>$ <userinput>dig @10.53.0.1 www.dnssec-failed.org. A</userinput>

; &lt;&lt;&gt;&gt; DiG 9.16.0 &lt;&lt;&gt;&gt; @10.53.0.1 www.dnssec-failed.org. A
; (1 server found)
;; global options: +cmd
;; Got answer:
;; -&gt;&gt;HEADER&lt;&lt;- opcode: QUERY, status: SERVFAIL, id: 22667
;; flags: qr rd ra; QUERY: 1, ANSWER: 0, AUTHORITY: 0, ADDITIONAL: 1

;; OPT PSEUDOSECTION:
; EDNS: version: 0, flags:; udp: 4096
; COOKIE: 69c3083144854587010000005e67bb57f5f90ff2688e455d (good)
;; QUESTION SECTION:
;www.dnssec-failed.org.		IN	A

;; Query time: 2763 msec
;; SERVER: 10.53.0.1#53(10.53.0.1)
;; WHEN: Tue Mar 10 16:07:51 GMT 2020
;; MSG SIZE  rcvd: 78</screen>

<para>On the other hand, if DNSSEC validation is disabled (by adding
the statement <code>dnssec-validation no;</code> to the <code>options</code>
clause in the configuration file), the lookup succeeds:</para>

  <screen>$ <userinput>dig @10.53.0.1 www.dnssec-failed.org. A</userinput>

; &lt;&lt;&gt;&gt; DiG 9.16.0 &lt;&lt;&gt;&gt; @10.53.0.1 www.dnssec-failed.org. A
; (1 server found)
;; global options: +cmd
;; Got answer:
;; -&gt;&gt;HEADER&lt;&lt;- opcode: QUERY, status: NOERROR, id: 54704
;; flags: qr rd ra; QUERY: 1, ANSWER: 2, AUTHORITY: 0, ADDITIONAL: 1

;; OPT PSEUDOSECTION:
; EDNS: version: 0, flags:; udp: 4096
; COOKIE: 251eee58208917f9010000005e67bb6829f6dabc5ae6b7b9 (good)
;; QUESTION SECTION:
;www.dnssec-failed.org.		IN	A

;; ANSWER SECTION:
www.dnssec-failed.org.	7200	IN	A	68.87.109.242
www.dnssec-failed.org.	7200	IN	A	69.252.193.191

;; Query time: 439 msec
;; SERVER: 10.53.0.1#53(10.53.0.1)
;; WHEN: Tue Mar 10 16:08:08 GMT 2020
;; MSG SIZE  rcvd: 110
</screen>

  <para>Do not be tempted to disable DNSSEC validation just because some
  names are failing to resolve.  Remember, DNSSEC protects your DNS lookup
  from hacking. The next section describes how you can quickly check whether
  the failure to successfully look up a name is due to a validation
  failure.</para>
 
 </section>


 <!-- ====== How Do I know I Have a Validation Problem? ====== -->
 <section id="how-do-i-know-i-have-a-validation-problem">
  <title>How Do I know I Have a Validation Problem?</title>
  <para>Since all DNSSEC validation failures result in a general
  <code>SERVFAIL</code> message, how do we know that it was related to
  validation in the first place?  Fortunately, there is a flag in
  <command>dig</command>, (<option>+cd</option>, checking disabled)
  which tells the server to disable DNSSEC validation.  
  When you've received a <code>SERVFAIL</code> message, re-run the
  query one more time, and throw in the <option>+cd</option> flag. If the query
  succeeds with <option>+cd</option>, but ends in <code>SERVFAIL</code> without
  it, then you know you are dealing with a validation problem. So using the
  previous example of <code>www.dnssec-failed.org</code> and with DNSSEC
  validation enabled in the resolver:</para>

  <screen>$ <userinput>dig @10.53.0.1 www.dnssec-failed.org A +cd</userinput>

; &lt;&lt;&gt;&gt; DiG 9.16.0 &lt;&lt;&gt;&gt; @10.53.0.1 www.dnssec-failed.org. A +cd
; (1 server found)
;; global options: +cmd
;; Got answer:
;; -&gt;&gt;HEADER&lt;&lt;- opcode: QUERY, status: NOERROR, id: 62313
;; flags: qr rd ra cd; QUERY: 1, ANSWER: 2, AUTHORITY: 0, ADDITIONAL: 1

;; OPT PSEUDOSECTION:
; EDNS: version: 0, flags:; udp: 4096
; COOKIE: 73ca1be3a74dd2cf010000005e67c8c8e6df64b519cd87fd (good)
;; QUESTION SECTION:
;www.dnssec-failed.org.		IN	A

;; ANSWER SECTION:
www.dnssec-failed.org.	7197	IN	A	68.87.109.242
www.dnssec-failed.org.	7197	IN	A	69.252.193.191

;; Query time: 0 msec
;; SERVER: 10.53.0.1#53(10.53.0.1)
;; WHEN: Tue Mar 10 17:05:12 GMT 2020
;; MSG SIZE  rcvd: 110
</screen>

  <para>For more information on troubleshooting, please see <xref
  linkend="dnssec-troubleshooting"/>.</para>

 </section>
</section>

