<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE book PUBLIC "-//OASIS//DTD DocBook XML V4.2//EN"
"http://www.oasis-open.org/docbook/xml/4.2/docbookx.dtd" [
<!ENTITY mdash  "&#x2014;" >
]>
 <section id="dnssec-policy-creation">
  <title>Creating and Setting a DNSSEC Policy</title>

   <para>The remainder of this section describes the contents of a custom
   DNSSEC policy.  <xref linkend="dnssec-advanced-discussions"/> describes the
   concepts involved here and the pros and cons of choosing particular values.
   If you are not familiar with DNSSEC, it may be worth reading that chapter
   first.</para>

  <para>Setting up your own DNSSEC policy means that you have to include
  a <code>dnssec-policy</code> clause in the zone file.  The following
  is an example of such a clause:
  <screen>dnssec-policy example {
    dnskey-ttl 600;
    keys {
        ksk lifetime 365d algorithm ecdsap256sha256;
        zsk lifetime 60d algorithm ecdsap256sha256;
    };
    max-zone-ttl 600;
    parent-ds-ttl 600;
    parent-propagation-delay 2h;
    parent-registration-delay 3d;
    publish-safety 1h;
    retire-safety 1h;
    signatures-refresh 5d;
    signatures-validity 15d;
    signatures-validity-dnskey 15d;
    zone-propagation-delay 2h;
};</screen></para>


 <para>The <code>keys</code> clause lists all keys that should be in the zone,
 along with their associated parameters.  In this example, we are using the
 conventional KSK/ZSK split, with the KSK changed every year and the ZSK
 changed every two months.  The <code>default</code> DNSSEC policy sets a
 CSK that is never changed.  We have used one of the two mandatory
 algorithms for the keys.</para>

 <para>The <code>*-ttl</code> options are, as expected, the TTLs of the associated
 records.  Remember that we said that during a key rollover, we have to wait for
 records to expire from caches?  Well, the values here tell BIND the maximum amount of
 time it has to wait for this to happen.  Values can be set for the DNSKEY records in
 your zone, the non-DNSKEY records in your zone, and for the DS records in the parent
 zone.  The <code>*-propagation-delay</code> parameters tell BIND how long it takes for
 a change in zone contents to become available on all slave servers. (This may be
 non-negligible. For example, if a large zone is downloaded over a slow link.)</para>

 <para>The policy also sets values for the various signature pameters: how long the
 signatures on the DNSKEY and non-DNSKEY records are valid, and how often BIND should
 re-sign the zone.</para>

 <para>When a new KSK or CSK appears in the zone, the associated DS record needs
 to be included in the parent zone.  That time is represented by the
 <code>parent-registration-delay</code> option.  Getting the record into the parent
 zone may still require manual intervention, so we will look at this in more
 detail in section <xref linkend="working-with-the-parent-2"/>.</para>

 <para>Finally, the <code>*-safety</code> options are there to give you a bit of leeway
 in case a key roll doesn't go to plan.  When introduced into the zone, the
 <code>publish-safety</code> time is the amount of additional time over and above that
 calculated from the other parameters, that the new key will be in the zone before
 BIND starts to sign record with it.  Similarly, the <code>retire-safety</code> is
 the amount of additional time, over and above that calculated from the other
 parameters, that the old key is retained in the zone before being removed.</para>

 <para>Usually, the exact timing of a key roll, or how long a signature remains valid
 is not critical.  In which case, when setting values for the parameters, err on the
 side of caution. It is better to have an operation like a key roll take a few days
 longer than absolutely required than it is to have a quick key roll but occasionally
 have users get validation failures during the process.</para>

 </section>
