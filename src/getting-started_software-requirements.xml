<!-- === Software Requirement === -->
<section id="software-requirement">
 <title>Software Requirement</title>

 <!-- =====  BIND Version ====== -->
 <section id="bind-version">
  <title>BIND Version</title>
  <para>The configuration examples given in this document requires BIND
  version <emphasis>9.9</emphasis> or newer. To check the version of
  <command>named</command> you have installed, use the <option>-v</option>
  switch as shown below:

   <screen># <userinput>named -v</userinput>
BIND 9.10.1</screen>
  </para>
 </section>


 <!-- ====== Check BIND if DNSSEC-capable ====== --> 
 <section id="dnssec-support-in-bind">
  <title>DNSSEC Support in BIND</title>
  <para>All versions of BIND 9 since BIND 9.7 can support DNSSEC as currently
  deployed in the global DNS. The BIND software you are
  running most likely already supports DNSSEC as shipped. Run the command
  <command>named -V</command> to see what flags it was built with. If it was
  built with OpenSSL (<option>--with-openssl</option>), then it supports
  DNSSEC. Below is an example screenshot of running <command>named
  -V</command>:

  <screen>$ <userinput>named -V</userinput>
BIND 9.10.1 &lt;id:fe66c6b1> built by make with '--prefix=/opt/local'
'--mandir=/opt/local/share/man' '<userinput>--with-openssl</userinput>=/opt/local'
'--with-libxml2=/opt/local' '--without-libjson' '--enable-threads'
'--enable-ipv6' 'CC=/usr/bin/clang' 'CFLAGS=-pipe -Os -arch x86_64'
'LDFLAGS=-L/opt/local/lib -Wl,-headerpad_max_install_names -arch x86_64'
'CPPFLAGS=-I/opt/local/include'
compiled by CLANG 4.2.1 Compatible Apple LLVM 5.1 (clang-503.0.40)
using OpenSSL version: OpenSSL 1.0.1i 6 Aug 2014
using libxml2 version: 2.9.1</screen>
  </para>

  <para>If the BIND 9 software you have does not support DNSSEC, it may be
  necessary to rebuild it from source or upgrade to a newer version.</para>

 </section>


 <!-- ====== System Entropy ====== --> 
 <section id="system-entropy">
  <title>System Entropy</title>
  <para>If you plan on deploying DNSSEC to your authoritative server, you will
  need to generate cryptographic keys (<xref
  linkend="signing-generate-keys-explained"/>). The amount of time it takes to
  generate the keys depends on the source of randomness, or entropy, on your
  systems. On some systems (especially virtual machines) with insufficient
  entropy, it may take much longer than one cares to wait to generate
  keys.</para>

  <para>There are software packages, such as <command>haveged</command> for
  Linux, that provides additional entropy for your system. Once installed, they
  will significantly reduce the time needed to generate keys.</para>

  <para>The more entropy there is, the better pseudo-random numbers you get,
  and stronger keys are generated. If you want or need high quality random
  numbers, take a look at <xref linkend="hardware-security-modules" /> for some
  of the hardware-based solutions.</para>

 </section>
</section>
